name: Download Workflow Logs for Multiple Runners

on:
  workflow_dispatch:
    inputs:
      runner_id_1:
        description: "ID of the first runner"
        required: true
      runner_id_2:
        description: "ID of the second runner"
        required: true

jobs:
  download-logs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download Logs for Runner 1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_SECRET_TOKEN }}
          RUNNER_ID: ${{ inputs.runner_id_1 }}
          REPO: pavvi17/helm-core-framework
        run: |
          curl -L -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/$REPO/actions/runs/$RUNNER_ID/logs" \
               -o runner_${RUNNER_ID}_logs.zip
          mkdir -p logs/runner_${RUNNER_ID}
          unzip -o runner_${RUNNER_ID}_logs.zip -d logs/runner_${RUNNER_ID}

      - name: Upload Logs for Runner 1
        uses: actions/upload-artifact@v3
        with:
          name: runner-${{ inputs.runner_id_1 }}-logs
          path: logs/runner_${{ inputs.runner_id_1 }}

      - name: Download Logs for Runner 2
        env:
          GITHUB_TOKEN: ${{ secrets.MY_SECRET_TOKEN }}
          RUNNER_ID: ${{ inputs.runner_id_2 }}
          REPO: pavvi17/helm-core-framework
        run: |
          curl -L -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/$REPO/actions/runs/$RUNNER_ID/logs" \
               -o runner_${RUNNER_ID}_logs.zip
          mkdir -p logs/runner_${RUNNER_ID}
          unzip -o runner_${RUNNER_ID}_logs.zip -d logs/runner_${RUNNER_ID}

      - name: Upload Logs for Runner 2
        uses: actions/upload-artifact@v3
        with:
          name: runner-${{ inputs.runner_id_2 }}-logs
          path: logs/runner_${{ inputs.runner_id_2 }}

      - name: Process Logs
        run: |
          mkdir -p processed
          cd logs
          MASTER_FILE="runner_${{ inputs.runner_id_1 }}/1_Set up job.txt"
          BRANCH_FILE="runner_${{ inputs.runner_id_2 }}/1_Set up job.txt"

          # Ensure the files exist
          if [[ ! -f $MASTER_FILE ]] || [[ ! -f $BRANCH_FILE ]]; then
            echo "Error: Both files must exist for comparison!"
            exit 1
          fi

          # Remove timestamps
          sed -E 's/^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\.[0-9]+Z //' "$MASTER_FILE" > processed/master.txt
          sed -E 's/^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\.[0-9]+Z //' "$BRANCH_FILE" > processed/branch.txt

      - name: Install Vimdiff and Related Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y vim vim-gtk3 xvfb scrot

      - name: Generate Vimdiff Visualization
        run: |
          mkdir -p screenshots
          xvfb-run --server-args="-screen 0 1024x768x24" vimdiff processed/master.txt processed/branch.txt \
            -c 'set diffopt+=vertical' \
            -c 'TOhtml' \
            -c 'w! vimdiff-output.html' \
            -c 'qa!'
          xvfb-run --server-args="-screen 0 1024x768x24" vimdiff processed/master.txt processed/branch.txt -c ':sleep 2' &
          sleep 3
          DISPLAY=:99 scrot screenshots/vimdiff-screenshot.png

      - name: Upload Vimdiff Outputs
        uses: actions/upload-artifact@v4
        with:
          name: vimdiff-visualization
          path: |
            vimdiff-output.html
            screenshots/vimdiff-screenshot.png
